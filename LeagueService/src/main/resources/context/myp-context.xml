<?xml version="1.0" encoding="UTF-8"?>

<!-- - - Application context definition for app's business layer. - -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<!-- Cache Provider -->
	<bean id="cacheProvider" class="com.delesio.cache.ehcache.EhCacheProvider">
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="${hibernate.cache.configurationResourceName}" />
		<!-- <property name="configLocation" value="classpath:info/makeyourpicks/support/cache/CacheConfiguration.xml"/> -->
	</bean>


	<!-- Abstract Service -->
	<bean id="abstractService" abstract="true">
		<property name="dao" ref="dao"/>
		<property name="cacheProvider" ref="cacheProvider"/>
	<!-- <property name="transactionManager" ref="transactionManager"></property> -->
	</bean>

	<!-- <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean"> -->
	<!-- <property name="velocityProperties"> -->
	<!-- <value> -->
	<!-- resource.loader=class -->
	<!-- class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader -->
	<!-- </value> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- <bean id="rememberMeServices" -->
	<!-- class="com.delesio.web.authentication.WicketRememberMeServices"> -->
	<!-- <property name="userDetailsService" ref="playerManager" /> -->
	<!-- <property name="key" value="rememberMeService" /> -->
	<!-- </bean> -->

	<bean id="leagueManager" parent="abstractService"
		class="info.makeyourpicks.service.impl.LeagueManagerHibernate"
		init-method="init">
		<property name="leagueDao" ref="leagueDao" />
		<property name="paymentDao" ref="paymentDao" />
		<property name="joinSubject" value="${joinpool.subject}"></property>
		<property name="joinTemplate" value="${joinpool.message.html}"></property>
		<property name="receiptSubject" value="${receipt.subject}"></property>
		<property name="receiptTemplate" value="${receipt.message.html}"></property>
		<property name="emailService" ref="emailService" />
		<property name="playerManager" ref="playerManager" />
		<property name="gameManager" ref="gameManager" />
	</bean>

	<bean id="playerManager" class="info.makeyourpicks.service.impl.PlayerManagerHibernate"
		parent="abstractService" init-method="init">
		<property name="playerDao" ref="playerDao" />
		<property name="emailService" ref="emailService" />
		<property name="usernameRetrievalSubject" value="${username.subject}"></property>
		<property name="usernameRetrievalTemplate" value="${username.message.html}"></property>
		<!-- <property name="passwordEncoder" ref="passwordEncoder"/> -->
	</bean>

	<bean id="teamManager" parent="abstractService"
		class="info.makeyourpicks.service.impl.TeamManagerHibernate"
		init-method="init">
		<property name="teamDao" ref="teamDao" />
	</bean>

	<bean id="messageBoardManager" parent="playerManager"
		class="info.makeyourpicks.service.impl.MessageBoardManagerHibernate">
		<property name="messageBoardDao" ref="messageBoardDao" />
	</bean>

	<bean id="picksManager" parent="abstractService"
		class="info.makeyourpicks.service.impl.PicksManagerHibernate"
		init-method="init">
		<property name="pickDao" ref="pickDao" />
		<property name="playerManager" ref="playerManager" />
		<property name="gameManager" ref="gameManager" />

	</bean>

	<bean id="gameManager" parent="abstractService"
		class="info.makeyourpicks.service.impl.GameManagerHibernate"
		init-method="init">
		<property name="gameDao" ref="gameDao" />
		<property name="teamDao" ref="teamDao" />
		<property name="jobDetail" ref="jobDetail" />
		<property name="updateScoresJobDetail" ref="updateScoresJobDetail" />
		<property name="scheduler" ref="scheduler" />
		<property name="internetMode" value="${internet.mode}" />
		<property name="resource" value="${scores.resource}" />
		<property name="scoreHandler" value="${scores.scoreHandler}" />
		<property name="feedType" value="${scores.feed.type}" />
		<property name="scoreUpdateTimeInMin" value="${scores.feed.updateTimerInMin}" />
		<property name="scoreUpdateRepeatTimes" value="${scores.feed.numberRepeats}" />
		<property name="schedulerOn" value="${schedulerOn}" />
	</bean>

	<bean id="emailService" class="info.makeyourpicks.service.impl.LeaguesEmailService "
		parent="springBean">
		<property name="mailSender" ref="mailSender" />
	</bean>

	<!-- Dao Implementations -->
	<bean id="leagueDao" parent="abstractDao"
		class="info.makeyourpicks.dao.hibernate.LeagueDaoImpl" />
	<bean id="playerDao" parent="abstractDao"
		class="info.makeyourpicks.dao.hibernate.PlayerDaoImpl" />
	<bean id="teamDao" parent="abstractDao"
		class="info.makeyourpicks.dao.hibernate.TeamDaoImpl" />
	<bean id="gameDao" parent="abstractDao"
		class="info.makeyourpicks.dao.hibernate.GameDaoImpl" />
	<bean id="messageBoardDao" parent="abstractDao"
		class="info.makeyourpicks.dao.hibernate.MessageBoardDaoImpl" />
	<bean id="pickDao" parent="abstractDao"
		class="info.makeyourpicks.dao.hibernate.PickDaoImpl" />
	<bean id="paymentDao" parent="abstractDao"
		class="info.makeyourpicks.dao.hibernate.PaymentDao" />

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="localhost" />
	</bean>

	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">

	</bean>

	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="picksManager" />
		<property name="targetMethod" value="clearPickCache" />
	</bean>

	<bean id="updateScoresJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="gameManager" />
		<property name="targetMethod" value="executeGameScoreParsing" />
	</bean>

</beans>
